name: Continuos Deployment

on:
  pull_request:
    types:
      - closed
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGION_DEFAULT: us-east-1
  CLUSTER_NAME: tech-challenge-eks

jobs:
  Deploy:
    #if: ${{ github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main' }}
    name: 'Deploy Application'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate tag
        id: generate_tag
        run: |
          SHA=$(echo $GITHUB_SHA | head -c7)
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Login into the container registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            diname/tech-challenge-production:${{ steps.generate_tag.outputs.sha }}
            diname/tech-challenge-production:latest

      - name: AWS Configure
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.SESSION_TOKEN }}
          aws-region: ${{ env.REGION_DEFAULT }}

      - name: Update Kube Config
        run: aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --region ${{ env.REGION_DEFAULT }}

      - name: Criar Secret
        run: |
          kubectl create secret generic tech-challenge-production-secrets \
            --from-literal=POSTGRES_DB=${{ secrets.POSTGRES_DB }} \
            --from-literal=POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
            --from-literal=POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
            --from-literal=POSTGRES_PORT=${{ secrets.POSTGRES_PORT }} \
            --from-literal=POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} \
            --from-literal=AWS_REGION=${{ secrets.AWS_REGION }} \
            --from-literal=ACCESS_KEY_ID=${{ secrets.ACCESS_KEY_ID }} \
            --from-literal=SECRET_ACCESS_KEY=${{ secrets.SECRET_ACCESS_KEY }} \
            --from-literal=SESSION_TOKEN=${{ secrets.SESSION_TOKEN }} \
            --from-literal=PRODUCTION_STATUS_QUEUE_NAME=${{ secrets.PRODUCTION_STATUS_QUEUE_NAME }} \
            --from-literal=PRODUCTION_STATUS_QUEUE_URL=${{ secrets.PRODUCTION_STATUS_QUEUE_URL }} \
            --from-literal=ORDER_READY_FOR_PRODUCTION_QUEUE_NAME=${{ secrets.ORDER_READY_FOR_PRODUCTION_QUEUE_NAME }} \
            --from-literal=ORDER_READY_FOR_PRODUCTION_QUEUE_URL=${{ secrets.ORDER_READY_FOR_PRODUCTION_QUEUE_URL }} \

      - name: Kube Apply
        run: |
          kubectl apply -f k8s/production/
